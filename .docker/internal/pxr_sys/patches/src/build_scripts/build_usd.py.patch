--- ./build_scripts/build_usd.py
+++ ./build_scripts/build_usd.py
@@ -695,7 +695,7 @@
     BOOST_URL = "https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.gz"
     BOOST_VERSION_FILE = "include/boost/version.hpp"
 elif Linux():
-    BOOST_URL = "https://boostorg.jfrog.io/artifactory/main/release/1.70.0/source/boost_1_70_0.tar.gz"
+    BOOST_URL = "https://sourceforge.net/projects/boost/files/boost/1.76.0/boost_1_76_0.tar.gz"
     BOOST_VERSION_FILE = "include/boost/version.hpp"
 elif Windows():
     # The default installation of boost on Windows puts headers in a versioned 
@@ -1166,6 +1166,10 @@

 def InstallOpenEXR(context, force, buildArgs):
     with CurrentWorkingDirectory(DownloadURL(OPENEXR_URL, context, force)):
+        PatchFile(
+            "OpenEXR/IlmImf/ImfTiledMisc.cpp",
+            [("#include <algorithm>\n", "#include <algorithm>\n#include <limits>\n")],
+        )
         RunCMake(context, force, 
                  ['-DPYILMBASE_ENABLE=OFF',
                   '-DOPENEXR_VIEWERS_ENABLE=OFF',
@@ -1561,10 +1565,9 @@

 def InstallAlembic(context, force, buildArgs):
     with CurrentWorkingDirectory(DownloadURL(ALEMBIC_URL, context, force)):
-        if MacOS():
-            PatchFile("CMakeLists.txt",
-              [("ADD_DEFINITIONS(-Wall -Werror -Wextra -Wno-unused-parameter)",
-                "ADD_DEFINITIONS(-Wall -Wextra -Wno-unused-parameter)")])
+        PatchFile("CMakeLists.txt",
+            [("ADD_DEFINITIONS(-Wall -Werror -Wextra -Wno-unused-parameter)",
+            "ADD_DEFINITIONS(-Wall -Wextra -Wno-unused-parameter)")])
         cmakeOptions = ['-DUSE_BINARIES=OFF', '-DUSE_TESTS=OFF']
         if context.enableHDF5:
             # HDF5 requires the H5_BUILT_AS_DYNAMIC_LIB macro be defined if
@@ -1589,6 +1592,14 @@

 def InstallDraco(context, force, buildArgs):
     with CurrentWorkingDirectory(DownloadURL(DRACO_URL, context, force)):
+        PatchFile(
+            "src/draco/core/hash_utils.h",
+            [("#include <functional>\n", "#include <functional>\n#include <cstddef>\n")],
+        )
+        PatchFile(
+            "src/draco/io/parser_utils.cc",
+            [("#include <iterator>\n", "#include <iterator>\n#include <limits>\n")],
+        )
         cmakeOptions = [
             '-DBUILD_USD_PLUGIN=ON',
         ]
